{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","variables.ts","components/FormAddTodo/FormAddTodo.tsx","App.tsx","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","userId","pattern","FormAddTodo","addTodo","useState","selectedUserId","setSelectedUserId","setTitle","titleError","setTitleError","selectError","setSelectError","action","method","onSubmit","event","preventDefault","trim","type","onChange","inputValue","target","value","split","filter","char","test","join","placeholder","selectValue","disabled","usersFromServer","App","todosFromServer","setTodos","useEffect","prevTodos","find","newTodo","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26dd9553.chunk.js","sourcesContent":["import { User } from '../../types/types';\n\nexport const UserInfo: React.FC<{ user: User }>\n  = ({ user: { email, name } }) => {\n    return (\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    );\n  };\n","import classNames from 'classnames';\nimport { Todo } from '../../types/types';\nimport { UserInfo } from '../UserInfo';\n\nexport const TodoInfo: React.FC<{ todo: Todo }>\n= ({\n  todo: {\n    id,\n    completed,\n    title,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={`${id}`}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todo } from '../../types/types';\nimport { TodoInfo } from '../TodoInfo';\n\nexport const TodoList: React.FC<{ todos: Todo[] }> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// eslint-disable-next-line max-len\nexport const pattern = /^[a-zA-Z0-9а-яА-ЯіІїЇєЄґҐ'!?.,;:\"\"\\s]*$/;\n","import { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { pattern } from '../../variables';\n\ntype FormAddTodoProps = {\n  addTodo: (title: string, userId: number) => void;\n};\n\nexport const FormAddTodo: React.FC<FormAddTodoProps> = ({ addTodo }) => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [title, setTitle] = useState('');\n\n  const [titleError, setTitleError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value\n      .split('').filter(char => pattern.test(char)).join('');\n\n    setTitle(inputValue);\n\n    if (inputValue.trim()) {\n      setTitleError(false);\n    }\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectValue = +event.target.value;\n\n    setSelectedUserId(selectValue);\n\n    if (selectValue) {\n      setSelectError(false);\n    }\n  };\n\n  const handleAdd = () => {\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setSelectError(true);\n    }\n\n    if (title.trim() && selectedUserId) {\n      addTodo(title, selectedUserId);\n\n      setTitle('');\n      setSelectedUserId(0);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    handleAdd();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label>\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            onChange={handleInput}\n            value={title}\n            placeholder=\"Enter a title\"\n          />\n        </label>\n        {titleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label>\n          User:\n          <select\n            data-cy=\"userSelect\"\n            onChange={handleSelect}\n            value={selectedUserId}\n          >\n            <option\n              key={0}\n              value={0}\n              disabled\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {selectError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { FormAddTodo } from './components/FormAddTodo';\n\nexport const App = () => {\n  const [todos, setTodos] = useState([...todosFromServer]);\n\n  const matchTodosUsers = () => {\n    setTodos(prevTodos => prevTodos.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    })));\n  };\n\n  const addTodo = (title: string, userId: number) => {\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: usersFromServer.find(user => user.id === userId),\n    };\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  useEffect(() => {\n    matchTodosUsers();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <FormAddTodo addTodo={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}